# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type BaseResponse {
  errMsg: String
  success: Boolean!
}

input CreateEventInput {
  description: String!
  endDate: DateTime
  image: String
  location: String!
  maximumAttendance: Int
  startDate: DateTime!
  title: String!
}

type CreateEventResponse {
  errMsg: String
  event: Event!
  success: Boolean!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Event {
  createdAt: DateTime!
  description: String!
  endDate: DateTime
  form: Form!
  id: String!
  image: String
  location: String!
  maximumAttendance: Int
  startDate: DateTime!
  title: String!
  updatedAt: DateTime!
}

type Form {
  createdAt: DateTime!
  event: Event!
  formKeys: [FormKey!]
  updatedAt: DateTime!
}

type FormField {
  formKey: FormKey!
  userForm: UserForm!
  value: String!
}

type FormKey {
  form: Form!
  formFields: [FormField!]
  id: Float!
  label: String!
}

type Mutation {
  addOrganizers(eventId: String!, organizerIds: [String!]!): UpdateEventResponse!
  createEvent(createEventInput: CreateEventInput!): CreateEventResponse!
  removeEvent(eventId: String!): BaseResponse!
  updateEvent(eventId: String!, updateEventInput: UpdateEventInput!): UpdateEventResponse!
}

type Query {
  getEvent(eventId: String!): Event!
  getEventsOrganized: [Event!]!
  hello: String!
}

input UpdateEventInput {
  description: String
  endDate: DateTime
  image: String
  location: String
  maximumAttendance: Int
  startDate: DateTime
  title: String
}

type UpdateEventResponse {
  errMsg: String
  event: Event!
  success: Boolean!
}

type UserForm {
  createdAt: DateTime!
  formFields: [FormField!]
  updatedAt: DateTime!
  userParticipateEvent: UserParticipateEvent!
}

type UserParticipateEvent {
  event: Event!
  feedback: String
  isArrived: Boolean!
  rating: Float!
  userForm: UserForm!
}